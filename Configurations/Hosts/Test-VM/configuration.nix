{ config, pkgs, host, lib, inputs, userconf, ... }: 

let
  # Load user-specific variables
  userVars = import ./variables/user-vars.nix;
  inherit (userVars) username gitUsername gitEmail keyboardLayout;
  nixDirectory = "/home/${username}/NixOS";

in {
  ################################################################
  # Module Imports
  ################################################################

  imports = [
    # Host-specific hardware configuration (autogenerated)
    ./hardware-configuration.nix

    # System-level user definition
    ./user.nix

    # Base and global modules
    ../../../Modules/System

    # Home Manager integration
    inputs.home-manager.nixosModules.home-manager

    # Surface-specific kernel patch (temporary or conditional)
    #../../../Modules/Hardware/Surface/Custom-Kernel.nix
    ../../../Modules/Hardware/Bluetooth/bluetooth.nix


    
    # nixos95
    #inputs.nyx.homeManagerModules.default
    inputs.nixos95.nixosModules.default

  ];


  ################################################################
  # Display & Desktop Environment
  ################################################################


  nixos95 = {
    enable = true;
    user = username;

    taskbar = {
      homeIcon = "whisker-menu-button";
      battery-plugin.enable = false;
      applications = [
        {
          name = "Brave";
          description = "Browse the Web";
          pkg = pkgs.brave;
          icon = "world";
        }
        {
          name = "Signal";
          description = "Private Messenger";
          pkg = pkgs.signal-desktop;
          icon = "signal";
        }
        {
          name = "Obsidian";
          description = "Markdown Editor";
          exe = "obsidian %u";
          icon = "obsidian";
        }
        {
          name = "Spotify";
          description = "Spotify Music";
          exe = "spotify %U";
          icon = "spotify";
        }
      ];
    };

    keybinds = {
      commands = [
        { key="<Super>l";  exe="xflock4"; }
      ];
    };
  };

  ################################################################
  # System Packages (XFCE & Utilities)
  ################################################################

  environment.systemPackages = with pkgs; [

    # Migrate to nixos95?: 
    xfce.gigolo
    xfce.xfce4-screenshooter
    xfce.parole
    # xfce.xfce4-clipman
    
    # other:
    zsh


  ];


  ################################################################
  # System Services & Features
  ################################################################

  docker = {
    enable = false;
    rootless = false;
    podman = false;
  };

  steam.enable = true;
  openssh.enable = true;
  vm.enable = false;
  zsh.enable = true;
  flatpak.enable = false;

  wireshark = {
    enable = false;
    userForWSGroup = username;
  };


  ################################################################
  # Home Manager Configuration
  ################################################################

  home-manager = {
    useGlobalPkgs = true;
    useUserPackages = true;
    backupFileExtension = "delme-HMbackup";

    users.${username} = import ./home/home.nix {
      inherit config nixDirectory pkgs inputs;
    };
  };

  ################################################################
  # Bootloader
  ################################################################

  # Bootloader.
#  boot.loader.grub.enable = true;
#  boot.loader.grub.device = "/dev/nvme0n1";
#  boot.loader.grub.useOSProber = true;


  boot.loader = {
    grub = {
      enable = true;
      efiSupport = false;
      useOSProber = false;
      devices = [ "nodev" ];
    };
    efi.canTouchEfiVariables = true;
    systemd-boot.enable = false;
  };


  ################################################################
  # System Version
  ################################################################

  system.stateVersion = "25.05";
}
